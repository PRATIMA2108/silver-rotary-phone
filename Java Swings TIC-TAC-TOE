import javax.swing.*;
import java.awt.*;
import java.awt.event.*;

public class asdf extends JFrame implements ActionListener {
    JButton[][] buttons;
    int[][] board;
    int player;
    
    public asdf() {
        super("Tic Tac Toe");
        
        // Set up the game board
        buttons = new JButton[3][3];
        board = new int[3][3];
        player = 1;
        JPanel panel = new JPanel(new GridLayout(3, 3));
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                buttons[i][j] = new JButton();
                buttons[i][j].addActionListener(this);
                buttons[i][j].setFont(new Font("Arial", Font.PLAIN, 50));
                panel.add(buttons[i][j]);
            }
        }
        getContentPane().add(panel, BorderLayout.CENTER);
        
        // Set up the window
        setSize(300, 300);
        setVisible(true);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    }
    
    public void actionPerformed(ActionEvent e) {
        JButton button = (JButton) e.getSource();
        int row = -1, col = -1;
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                if (buttons[i][j] == button) {
                    row = i;
                    col = j;
                }
            }
        }
        if (row != -1 && col != -1 && board[row][col] == 0) {
            button.setText(player == 1 ? "X" : "O");
            board[row][col] = player;
            if (checkWin()) {
                JOptionPane.showMessageDialog(this, "Player " + player + " wins!");
                System.exit(0);
            } else if (checkTie()) {
                JOptionPane.showMessageDialog(this, "Tie!");
                System.exit(0);
            }
            player = player == 1 ? 2 : 1;
        }
    }
    
    public boolean checkWin() {
        // Check rows
        for (int i = 0; i < 3; i++) {
            if (board[i][0] == player && board[i][1] == player && board[i][2] == player) {
                return true;
            }
        }
        // Check columns
        for (int j = 0; j < 3; j++) {
            if (board[0][j] == player && board[1][j] == player && board[2][j] == player) {
                return true;
            }
        }
        // Check diagonals
        if (board[0][0] == player && board[1][1] == player && board[2][2] == player) {
            return true;
        }
        if (board[0][2] == player && board[1][1] == player && board[2][0] == player) {
            return true;
        }
        return false;
    }
    
    public boolean checkTie() {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                if (board[i][j] == 0) {
                    return false;
                }
            }
        }
        return true;
    }
    

    public static void main(String[] args) {
    	new asdf();
    }
}
